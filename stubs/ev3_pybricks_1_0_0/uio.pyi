from typing import Any

class BytesIO:
    def __init__(self, *args: Any) -> None: ...
    def close() -> None: ...
    def flush() -> None: ...
    def getvalue() -> None: ...
    def read() -> None: ...
    def readinto() -> None: ...
    def readline() -> None: ...
    def seek() -> None: ...
    def write() -> None: ...

class FileIO:
    def __init__(self, *args: Any) -> None: ...
    def close() -> None: ...
    def fileno() -> None: ...
    def flush() -> None: ...
    def read() -> None: ...
    def readinto() -> None: ...
    def readline() -> None: ...
    def readlines() -> None: ...
    def seek() -> None: ...
    def tell() -> None: ...
    def write() -> None: ...

class IOBase:
    def __init__(self, *args: Any) -> None: ...

class StringIO:
    def __init__(self, *args: Any) -> None: ...
    def close() -> None: ...
    def flush() -> None: ...
    def getvalue() -> None: ...
    def read() -> None: ...
    def readinto() -> None: ...
    def readline() -> None: ...
    def seek() -> None: ...
    def write() -> None: ...

class TextIOWrapper:
    def __init__(self, *args: Any) -> None: ...
    def close() -> None: ...
    def fileno() -> None: ...
    def flush() -> None: ...
    def read() -> None: ...
    def readinto() -> None: ...
    def readline() -> None: ...
    def readlines() -> None: ...
    def seek() -> None: ...
    def tell() -> None: ...
    def write() -> None: ...

def open() -> None: ...
