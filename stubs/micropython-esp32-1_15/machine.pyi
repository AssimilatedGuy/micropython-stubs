from typing import Any

class ADC:
    ATTN_0DB: int = ...
    ATTN_11DB: int = ...
    ATTN_2_5DB: int = ...
    ATTN_6DB: int = ...
    WIDTH_10BIT: int = ...
    WIDTH_11BIT: int = ...
    WIDTH_12BIT: int = ...
    WIDTH_9BIT: int = ...
    def atten(self) -> Any: ...
    def read(self) -> Any: ...
    def read_u16(self) -> Any: ...
    def width(self) -> Any: ...

class DAC:
    def write(self) -> Any: ...

DEEPSLEEP: int
DEEPSLEEP_RESET: int
EXT0_WAKE: int
EXT1_WAKE: int
HARD_RESET: int

class I2C:
    def init(self) -> Any: ...
    def readfrom(self) -> Any: ...
    def readfrom_into(self) -> Any: ...
    def readfrom_mem(self) -> Any: ...
    def readfrom_mem_into(self) -> Any: ...
    def readinto(self) -> Any: ...
    def scan(self) -> Any: ...
    def start(self) -> Any: ...
    def stop(self) -> Any: ...
    def write(self) -> Any: ...
    def writeto(self) -> Any: ...
    def writeto_mem(self) -> Any: ...
    def writevto(self) -> Any: ...

PIN_WAKE: int

class PWM:
    def deinit(self) -> Any: ...
    def duty(self) -> Any: ...
    def freq(self) -> Any: ...
    def init(self) -> Any: ...

PWRON_RESET: int

class Pin:
    IN: int = ...
    IRQ_FALLING: int = ...
    IRQ_RISING: int = ...
    OPEN_DRAIN: int = ...
    OUT: int = ...
    PULL_DOWN: int = ...
    PULL_HOLD: int = ...
    PULL_UP: int = ...
    WAKE_HIGH: int = ...
    WAKE_LOW: int = ...
    def init(self) -> Any: ...
    def irq(self) -> Any: ...
    def off(self) -> Any: ...
    def on(self) -> Any: ...
    def value(self) -> Any: ...

class RTC:
    def datetime(self) -> Any: ...
    def init(self) -> Any: ...
    def memory(self) -> Any: ...

class SDCard:
    def deinit(self) -> Any: ...
    def info(self) -> Any: ...
    def ioctl(self) -> Any: ...
    def readblocks(self) -> Any: ...
    def writeblocks(self) -> Any: ...

SLEEP: int
SOFT_RESET: int

class SPI:
    LSB: int = ...
    MSB: int = ...
    def deinit(self) -> Any: ...
    def init(self) -> Any: ...
    def read(self) -> Any: ...
    def readinto(self) -> Any: ...
    def write(self) -> Any: ...
    def write_readinto(self) -> Any: ...

class Signal:
    def off(self) -> Any: ...
    def on(self) -> Any: ...
    def value(self) -> Any: ...

class SoftI2C:
    def init(self) -> Any: ...
    def readfrom(self) -> Any: ...
    def readfrom_into(self) -> Any: ...
    def readfrom_mem(self) -> Any: ...
    def readfrom_mem_into(self) -> Any: ...
    def readinto(self) -> Any: ...
    def scan(self) -> Any: ...
    def start(self) -> Any: ...
    def stop(self) -> Any: ...
    def write(self) -> Any: ...
    def writeto(self) -> Any: ...
    def writeto_mem(self) -> Any: ...
    def writevto(self) -> Any: ...

class SoftSPI:
    LSB: int = ...
    MSB: int = ...
    def deinit(self) -> Any: ...
    def init(self) -> Any: ...
    def read(self) -> Any: ...
    def readinto(self) -> Any: ...
    def write(self) -> Any: ...
    def write_readinto(self) -> Any: ...

TIMER_WAKE: int
TOUCHPAD_WAKE: int

class Timer:
    ONE_SHOT: int = ...
    PERIODIC: int = ...
    def deinit(self) -> Any: ...
    def init(self) -> Any: ...
    def value(self) -> Any: ...

class TouchPad:
    def config(self) -> Any: ...
    def read(self) -> Any: ...

class UART:
    INV_CTS: int = ...
    INV_RTS: int = ...
    INV_RX: int = ...
    INV_TX: int = ...
    def any(self) -> Any: ...
    def deinit(self) -> Any: ...
    def init(self) -> Any: ...
    def read(self) -> Any: ...
    def readinto(self) -> Any: ...
    def readline(self) -> Any: ...
    def sendbreak(self) -> Any: ...
    def write(self) -> Any: ...

ULP_WAKE: int

class WDT:
    def feed(self) -> Any: ...

WDT_RESET: int

def deepsleep() -> Any: ...
def disable_irq() -> Any: ...
def enable_irq() -> Any: ...
def freq() -> Any: ...
def idle() -> Any: ...
def lightsleep() -> Any: ...
mem16 = Any
mem32 = Any
mem8 = Any

def reset() -> Any: ...
def reset_cause() -> Any: ...
def sleep() -> Any: ...
def soft_reset() -> Any: ...
def time_pulse_us() -> Any: ...
def unique_id() -> Any: ...
def wake_reason() -> Any: ...
