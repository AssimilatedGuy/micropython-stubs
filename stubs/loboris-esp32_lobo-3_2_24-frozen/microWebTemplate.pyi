from typing import Any, Optional

Node = Any

class MicroWebTemplate:
    def __init__(self, code: Any, escapeStrFunc: Any=..., filepath: Any=...) -> None: ...
    def Validate(self) -> Optional[None]: ...
    def Execute(self) -> Any: ...
    def _parseCode(self, execute: Any) -> None: ...
    def _parseBloc(self, execute: Any) -> Optional[Any]: ...
    def _processToken(self, tokenContent: Any, execute: Any) -> Any: ...
    def _processInstructionPYTHON(self, instructionBody: Any, execute: Any) -> None: ...
    def _processInstructionIF(self, instructionBody: Any, execute: Any) -> None: ...
    def _processInstructionELIF(self, instructionBody: Any, execute: Any) -> Any: ...
    def _processInstructionELSE(self, instructionBody: Any, execute: Any) -> Any: ...
    def _processInstructionFOR(self, instructionBody: Any, execute: Any) -> None: ...
    def _processInstructionEND(self, instructionBody: Any, execute: Any) -> Any: ...
    def _processInstructionINCLUDE(self, instructionBody: Any, execute: Any) -> None: ...
