from typing import Any, Optional, Tuple, Union

Node = Any

class Editor:
    def __init__(self, tab_size: smallint, undo_limit: Any) -> None: ...
    def wr(self, s: str) -> None: ...
    def rd_any(self) -> bool: ...
    def rd(self) -> Union[Any, str]: ...
    def goto(self, row: Any, col: Any) -> None: ...
    def clear_to_eol(self) -> None: ...
    def cursor(self, onoff: Any) -> None: ...
    def hilite(self, mode: Any) -> None: ...
    def mouse_reporting(self, onoff: Any) -> None: ...
    def scroll_region(self, stop: Any) -> None: ...
    def scroll_up(self, scrolling: Any) -> None: ...
    def scroll_down(self, scrolling: Any) -> None: ...
    def get_screen_size(self) -> Any: ...
    def redraw(self, flag: Any) -> None: ...
    def get_input(self) -> Union[Tuple[Any, str], Tuple[number, Any, Any, Any], Tuple[number, Any], Tuple[number, str]]: ...
    def display_window(self) -> None: ...
    def spaces(self, line: Any, pos: Any=...) -> int: ...
    def line_range(self) -> Tuple[Any, Any]: ...
    def line_edit(self, prompt: Any, default: Any) -> Optional[Any]: ...
    def find_in_file(self, pattern: Any, col: Any, end: Any) -> number: ...
    def undo_add(self, lnum: Any, text: Any, key: Any, span: Any=...) -> None: ...
    def delete_lines(self, yank: Any) -> None: ...
    def handle_edit_keys(self, key: Any, char: smallint) -> bool: ...
    def edit_loop(self) -> Any: ...
    def packtabs(self, s: str) -> Any: ...
    def get_file(self, fname: Any) -> None: ...
    def put_file(self, fname: Any) -> None: ...

def expandtabs(s: str) -> Union[Any, str]: ...
def pye(*content: Any) -> Any: ...
