from typing import Any, Optional, Union

Node = Any

def roundup(val: Any, align: Any) -> Any: ...

class FileSection:
    def __init__(self, f: Any, content_len: smallint, aligned_len: smallint) -> None: ...
    def read(self, sz: Any=...) -> Union[Any, bytes]: ...
    def readinto(self, buf: Any) -> Union[Any, number]: ...
    def skip(self) -> None: ...

class TarInfo:
    def __str__(self) -> str: ...

class TarFile:
    def __init__(self, name: str=..., fileobj: Any=...) -> None: ...
    def next(self) -> Optional[Any]: ...
    def __iter__(self) -> Any: ...
    def __next__(self) -> Any: ...
    def extractfile(self, tarinfo: Any) -> Any: ...
