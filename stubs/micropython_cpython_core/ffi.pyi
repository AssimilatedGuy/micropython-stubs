from typing import Any

class Func:
    f: Any = ...
    restype: Any = ...
    def __init__(self, f: Any, restype: Any) -> None: ...
    def __call__(self, *args: Any) -> Any: ...

class Var:
    v: Any = ...
    def __init__(self, v: Any) -> None: ...
    def get(self) -> None: ...

class DynMod:
    typemap: Any = ...
    mod: Any = ...
    def __init__(self, name: Any) -> None: ...
    def func(self, ret: Any, name: Any, params: Any) -> Any: ...
    def var(self, type: Any, name: Any) -> Any: ...

def open(name: Any) -> Any: ...
def func(ret: Any, addr: Any, params: Any) -> Any: ...
def callback(ret: Any, func: Any, params: Any) -> Any: ...
